decimal to binary in 30 bit;

for(int i=29;i>=0;i--){
     cout<<((N>>i&1));
    }

//
#include<iostream>
using namespace std;
}
void setbit(int n, int p){
    // 12 --> 00001100
    //   -->00010000---> 00000001<<p
    int need =1<<p;
    cout<< (n | need);
int main() {
    for(int i=0;i<8;i++){
        printBinary(i);
    }
    //set the bit in given position
    int a=12;
    int b=4;
    setbit(a,b);
    //unset the bit in given  position
    int i=3;
    cout<<(12 & (~(1<<i)));
    //toggle bit in given position
    int j=5;
    int x=15;// 00001111
    cout<<(x^
    }
    
    // logic to make upper to lower
    char a='a';
    char d=(c | '_');
    
    //logic to make lower to upper
    char a='a';
    char A=(a & '_');
    cout<<A;
    char x=(1<<5)
    
    //count set bits
    int val =15;
    int Set_Cnt=0;
    while(val){
       if(val&1){
            Set_Cnt++;
       }
       val = val >>1;
    }
    cout<<Set_Cnt;
    
    
    //addition of two numbers with bitwise
    
class Solution
{
    public:
    int sum(int a , int b)
    {
        while(b!=0){
            int carry=a&b;
            a=a^b;
            b=carry<<1;
        }
        return a;
    }
};


  //
